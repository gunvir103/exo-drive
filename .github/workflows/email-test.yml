name: Email Service Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'lib/services/email-service-resend.ts'
      - 'app/api/email/**'
      - '__tests__/email-service.test.ts'
      - '.github/workflows/email-test.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'lib/services/email-service-resend.ts'
      - 'app/api/email/**'
      - '__tests__/email-service.test.ts'
      - '.github/workflows/email-test.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 1  # Fetch only the latest commit to speed up checkout
    
    - name: üîß Set up Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
      
    - name: Verify workspace structure
      run: |
        echo "Current directory structure:"
        ls -la
        echo "Testing directory structure:"
        ls -la __tests__ || echo "__tests__ directory not found"
        echo "API directory structure:"
        ls -la app/api/email || echo "app/api/email directory not found"
        echo "Services directory structure:"
        ls -la lib/services || echo "lib/services directory not found"
    
    - name: Verify email service files exist
      run: |
        missing_files=()
        for file in "lib/services/email-service-resend.ts" "app/api/email/contact/route.ts" "app/api/email/booking/route.ts"; do
          if [ ! -f "$file" ]; then
            echo "Missing file: $file"
            missing_files+=("$file")
          else
            echo "Found file: $file"
          fi
        done
        
        if [ ${#missing_files[@]} -ne 0 ]; then
          echo "‚ö†Ô∏è The following files are missing:"
          printf '%s\n' "${missing_files[@]}"
          exit 1
        else
          echo "‚úÖ All required files verified successfully"
        fi
    
    - name: Create reports directory
      run: mkdir -p reports

    - name: Run email service tests
      run: |
        echo "Running tests with Bun version: $(bun --version)"
        bun vitest run --reporter=default --reporter=junit --outputFile.junit=reports/junit.xml --preload __tests__/setup.ts -- __tests__/email-service.test.ts
      env:
        RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
        # Add Node options to increase memory limit if needed
        NODE_OPTIONS: "--max-old-space-size=4096"

    - name: Publish Test Report
      uses: dorny/test-reporter@v2
      if: success() || failure()  # Run this step even if previous step failed
      with:
        name: Email Service Tests Report
        path: reports/junit.xml
        reporter: jest-junit
        fail-on-error: 'true'
